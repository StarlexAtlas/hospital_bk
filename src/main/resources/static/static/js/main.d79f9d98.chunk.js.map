{"version":3,"sources":["pages/Login.js","pages/Main.js","pages/Admin.js","pages/Admission.js","pages/NewAdmission.js","pages/Discharge.js","pages/Transfer.js","pages/PatientInfo.js","pages/Finance.js","pages/Recharge.js","pages/RecoursesSchedule.js","pages/Stock.js","pages/DrugStock.js","pages/EquipmentStock.js","pages/Order.js","pages/DrugOrder.js","pages/EquipmentOrder.js","pages/DrugReturn.js","pages/SickbedStock.js","pages/StaffStock.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginView","props","classes","React","useState","staffId","setStaffId","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","event","preventDefault","TextField","required","fullWidth","id","label","value","onChange","target","name","autoComplete","autoFocus","type","Button","color","onClick","Login","staff_id","data","FormData","append","fetch","method","body","then","res","json","code","Cookies","set","auth","department","router","push","pathname","alert","msg","error","Component","contextType","PropTypes","object","isRequired","drawerWidth","root","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","actionBar","justifyContent","content","flexGrow","background","default","padding","nested","paddingLeft","menuItem","InsideListItem","open","setOpen","Fragment","ListItem","button","ListItemText","primary","text","Collapse","in","timeout","unmountOnExit","List","disablePadding","children","map","item","history","routePath","state","MainView","AppBar","position","Toolbar","noWrap","style","borderColor","Drawer","anchor","Divider","get","index","Main","this","Admin","formControl","minWidth","selectEmpty","AdmissionView","medicalRecordId","setMedicalRecordId","options","setOptions","loading","length","preBalance","setPreBalance","setDepartment","roomId","setRoomId","useEffect","active","a","response","rooms","roomList","JSON","parse","room_list","Object","keys","key","String","gutterBottom","Grid","container","xs","sm","FormControl","InputLabel","Select","MenuItem","Autocomplete","newValue","onOpen","onClose","getOptionSelected","option","renderInput","params","InputProps","endAdornment","CircularProgress","size","onkeyup","InputAdornment","disableElevation","parseInt","Admission","div_full","div_inline","flexWrap","textField","marginRight","NewAdmissionView","idNumber","setIdNumber","setName","sex","setSex","birthday","setBirthday","InputLabelProps","shrink","NewAdmission","window","location","reload","DischargeView","Discharge","console","log","extra_amount","TransferView","targetRoomId","setTargetRoomId","Transfer","table","createData","medical_record_id","room","balance","PatientInfoView","rows","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","PatientInfo","patient_info","newData","current_department","room_id","setState","Finance","RechargeView","setBalance","Recharge","RecoursesScheduleView","orderId","countSum","align","onDetail","handleClickOpen","onComplete","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","detail","RecoursesSchedule","order_info","sum","newDetail","i","resources_name","resources_num","resources_value","Stock","DrugStockView","countOpen","setCountOpen","drugSelectName","setDrugSelectName","drugCode","setDrugCode","expirationDate","setExpirationDate","setValue","drugName","setDrugName","specification","setSpecification","company","setCompany","setForm","stock","setStock","drugIdSet","setDrugIdSet","stockSet","setStockSet","handleClose","onClickSelect","broaderColor","DialogActions","onClickAdd","indexOf","keyword","drugId","onClickDelete","onClickSet","DrugStock","drug_info","drug_id","drug_code","expiration_date","drug_name","stockNum","EquipmentStockView","equipmentName","setEquipmentName","equipmentLocation","setEquipmentLocation","equipmentValue","setEquipmentValue","equipmentNameSelect","setEquipmentNameSelect","onSelect","onAdd","equipmentId","onDelete","EquipmentStock","equipment_info","equipment_id","equipment_name","equipment_location","Order","addToCurrentList","drugNum","DrugOrderView","setDrugId","setDrugNum","currentRows","currentData","listRows","DrugOrder","newCurrentData","flag","existFlag","dataRow","m","splice","drugList","drugOne","drug_count","stringify","equipmentNum","EquipmentOrderView","setEquipmentId","setEquipmentNum","EquipmentOrder","DrugReturnView","DrugReturn","bedDepartment","setBedDepartment","bedPrice","setBedPrice","bedId","bedStatus","visibility","SickbedStock","sickbed_info","bed_id","bed_department","bed_price","bed_status","StaffStockView","staffNameSelect","setStaffNameSelect","staffAuth","setStaffAuth","staffName","setStaffName","staffSex","setStaffSex","staffDepartment","setStaffDepartment","StaffStock","staff_info","staff_auth","staff_name","staff_sex","staff_department","ReactDOM","render","hashHistory","path","exact","from","to","document","getElementById"],"mappings":"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","file":"static/js/main.d79f9d98.chunk.js","sourcesContent":["import React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Cookies from 'js-cookie'\nimport {PropTypes} from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LoginView(props) {\n    const classes = useStyles();\n    const [staffId, setStaffId] = React.useState(null);\n    const [password, setPassword] = React.useState(null);\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    登录\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={event => event.preventDefault()}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"staff_id\"\n                        label=\"工号\"\n                        value={staffId}\n                        onChange={event => setStaffId(event.target.value)}\n                        name=\"staff_id\"\n                        autoComplete=\"staff_id\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"密码\"\n                        value={password}\n                        onChange={event => setPassword(event.target.value)}\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => props.onClick(staffId, password)}\n                    >\n                        登入\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <LoginView\n            onClick={(staff_id, password) => {\n                let data = new FormData();\n                data.append(\"staff_id\", staff_id);\n                data.append(\"password\", password);\n\n                fetch(\"/login\", {\n                    method: \"POST\",\n                    body: data\n                })\n                    .then(res => res.json())\n                    .then(res => {\n                        if (res.code === 0) {\n                            Cookies.set(\"staff_auth\", res.data.auth)\n                            Cookies.set(\"staff_id\", staff_id)\n                            Cookies.set(\"department\", res.data.department)\n                            this.props.router.push({\n                                pathname: \"/main\"\n                            })\n                        } else {\n                            alert(res.msg)\n                        }\n                    }, error => {\n                        alert(\"请求被拦截\")\n                    })\n            }}\n        />\n    }\n}\n\nLogin.contextType = {\n    router: PropTypes.object.isRequired\n}","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport Cookies from 'js-cookie'\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    actionBar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\"\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3)\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(8)\r\n    },\r\n    menuItem: {\r\n        paddingLeft: theme.spacing(4)\r\n    }\r\n}));\r\n\r\nfunction InsideListItem(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem className={classes.menuItem} button onClick={handleClick}>\r\n                <ListItemText primary={props.object.text}/>\r\n                {open ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {props.object.children.map((item) => (\r\n                        <ListItem button className={classes.nested}>\r\n                            <ListItemText primary={item.text} onClick={() => {\r\n                                props.history.push({\r\n                                    pathname: item.routePath,\r\n                                    state: {}\r\n                                })\r\n                            }}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction setJsonByAuth(){\r\n    const doctorListJson = [\r\n        {\r\n            text: \"病人模块\",\r\n            children: [\r\n                {\r\n                    text: \"查询病人信息\",\r\n                    routePath: \"/main/admin/patient_info\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            text: \"订单开立\",\r\n            children: [\r\n                {\r\n                    text: \"药品订单\",\r\n                    routePath: \"/main/order/drug\"\r\n                },\r\n                {\r\n                    text: \"检查项目订单\",\r\n                    routePath: \"/main/order/equipment\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n    const adminListJson = [\r\n        {\r\n            text: \"病人模块\",\r\n            children: [\r\n                {\r\n                    text: \"病历开户\",\r\n                    routePath: \"/main/admin/new_admission\"\r\n                },\r\n                {\r\n                    text: \"办理入院\",\r\n                    routePath: \"/main/admin/admission\"\r\n                },\r\n                {\r\n                    text: \"办理出院\",\r\n                    routePath: \"/main/admin/discharge\"\r\n                },\r\n                {\r\n                    text: \"转移病房\",\r\n                    routePath: \"/main/admin/transfer\"\r\n                },\r\n                {\r\n                    text: \"查询病人信息\",\r\n                    routePath: \"/main/admin/patient_info\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            text: \"财务模块\",\r\n            children: [\r\n                {\r\n                    text: \"充值余额\",\r\n                    routePath: \"/main/finance/recharge\"\r\n                },\r\n                {\r\n                    text: \"订单结算\",\r\n                    routePath: \"/main/finance/recourses_schedule\"\r\n                },\r\n                {\r\n                    text: \"药品回收\",\r\n                    routePath: \"/main/finance/drug_return\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            text: \"库存模块\",\r\n            children: [\r\n                {\r\n                    text: \"药品管理\",\r\n                    routePath: \"/main/stock/drug\"\r\n                },\r\n                {\r\n                    text: \"设备管理\",\r\n                    routePath: \"/main/stock/equipment\"\r\n                },\r\n                {\r\n                    text: \"病床管理\",\r\n                    routePath: \"/main/stock/sickbed\"\r\n                },\r\n                {\r\n                    text: \"职员管理\",\r\n                    routePath: \"/main/stock/staff\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n    let auth = Cookies.get(\"staff_auth\")\r\n    if(auth == 1){\r\n        return adminListJson;\r\n    } else {\r\n        return doctorListJson;\r\n    }\r\n}\r\n\r\nfunction MainView(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className={classes.actionBar}>\r\n                    <Typography variant=\"h5\" noWrap>\r\n                        Hospital\r\n                    </Typography>\r\n                    <Button style={{borderColor: \"white\", color: \"white\"}} variant=\"outlined\" onClick={() => {\r\n                        Cookies.set(\"department\", \"\")\r\n                        Cookies.set(\"staff_auth\", \"\")\r\n                        props.history.push({\r\n                            pathname: \"/\"\r\n                        })\r\n                    }}>\r\n                        注销登录\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar}/>\r\n                <Divider/>\r\n                <List>\r\n                    {setJsonByAuth().map((object, index) =>\r\n                        object.children ? (\r\n                            <InsideListItem object={object} history={props.history}/>\r\n                        ) : (\r\n                            <ListItem className={classes.menuItem} button key={object.text}>\r\n                                <ListItemText primary={object.text}/>\r\n                            </ListItem>\r\n                        )\r\n                    )}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <MainView\r\n                children={this.props.children}\r\n                history={this.props.router}/>\r\n        );\r\n    }\r\n}\r\n\r\nMain.contextType = {\r\n    router: PropTypes.object.isRequired\r\n};","import React from \"react\";\r\n\r\nexport default class Admin extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction AdmissionView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [preBalance, setPreBalance] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [roomId, setRoomId] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n        (async () => {\r\n            const response = await fetch('/info/room?department=' + department);\r\n\r\n            const rooms = await response.json();\r\n            const roomList = JSON.parse(rooms.data.room_list);\r\n\r\n            if (active) {\r\n                setOptions(Object.keys(roomList).map((key) => String(roomList[key])));\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    办理入院\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"department\">选择科室</InputLabel>\r\n                        <Select\r\n                            id=\"department_selected\"\r\n                            value={department}\r\n                            onChange={event => {\r\n                                setRoomId(null)\r\n                                setDepartment(event.target.value)\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"内科\"}>内科</MenuItem>\r\n                            <MenuItem value={\"外科\"}>外科</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Autocomplete\r\n                        className={classes.formControl}\r\n                        id=\"room\"\r\n                        style={{width: 300}}\r\n                        onChange={(event, newValue) => setRoomId(newValue)}\r\n                        open={open}\r\n                        value={roomId}\r\n                        onOpen={() => {\r\n                            setOpen(true);\r\n                        }}\r\n                        onClose={() => {\r\n                            setOpen(false);\r\n                        }}\r\n                        getOptionSelected={(option, value) => option.name === value.name}\r\n                        options={options}\r\n                        loading={loading}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"选择病房\"\r\n                                InputProps={{\r\n                                    ...params.InputProps,\r\n                                    endAdornment: (\r\n                                        <React.Fragment>\r\n                                            {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\r\n                                            {params.InputProps.endAdornment}\r\n                                        </React.Fragment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <div>\r\n                    <TextField required id=\"pre_balance\" label=\"预存押金\" className={classes.formControl}\r\n                               onkeyup=\"this.value=this.value.replace(/\\D/g,'')\"\r\n                               InputProps={{\r\n                                   endAdornment: <InputAdornment position=\"end\">元</InputAdornment>,\r\n                               }}\r\n                               value={preBalance}\r\n                               onChange={event => setPreBalance(event.target.value)}/>\r\n                </div>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId, department, roomId, parseInt(preBalance * 100))}>\r\n                完成\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class Admission extends React.Component {\r\n    render() {\r\n        return (\r\n            <AdmissionView\r\n                onClick={(medicalRecordId, department, roomId, preBalance) => {\r\n                    if (preBalance < 0 || preBalance >= 1000000) {\r\n                        alert(\"非法数据\")\r\n                    } else {\r\n                        let data = new FormData();\r\n                        data.append(\"medical_record_id\", medicalRecordId);\r\n                        data.append(\"department\", department);\r\n                        data.append(\"room_id\", roomId);\r\n                        data.append(\"pre_balance\", preBalance);\r\n\r\n                    fetch(\"/admin/admission\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            alert(res.msg)\r\n                        }, error => {\r\n                            alert(\"请求被拦截\")\r\n                        })\r\n                }}}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nAdmission.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 240,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    div_full: {\r\n        display: \"block\",\r\n        width: \"100%\"\r\n    },\r\n    div_inline: {\r\n        display: \"inline-block\",\r\n        width: \"auto\"\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction NewAdmissionView(props) {\r\n\r\n    const classes = useStyles();\r\n    const [idNumber, setIdNumber] = React.useState(null);\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const [name, setName] = React.useState(null);\r\n    const [sex, setSex] = React.useState(null);\r\n    const [birthday, setBirthday] = React.useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    病历开户\r\n                </Typography>\r\n                <Divider/>\r\n                <div className={classes.div_inline}>\r\n                    <TextField required id=\"id_number\" label=\"身份证号\"\r\n                               value={idNumber} className={classes.formControl}\r\n                               onChange={event => setIdNumber(event.target.value)}/>\r\n                </div>\r\n                <div className={classes.div_inline}>\r\n                    <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                               value={medicalRecordId} className={classes.formControl}\r\n                               onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                </div>\r\n                <div/>\r\n                <div className={classes.div_inline}>\r\n                    <TextField required id=\"name\" label=\"姓名\" className={classes.formControl}\r\n                               value={name}\r\n                               onChange={event => setName(event.target.value)}/>\r\n                </div>\r\n                <div className={classes.div_inline}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sex\">性别</InputLabel>\r\n                        <Select\r\n                            id=\"sex\"\r\n                            value={sex}\r\n                            onChange={event => setSex(event.target.value)}\r\n                        >\r\n                            <MenuItem value={\"男\"}>男</MenuItem>\r\n                            <MenuItem value={\"女\"}>女</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <form className={classes.container} noValidate>\r\n                    <TextField\r\n                        id=\"birthday\"\r\n                        label=\"出生日期\"\r\n                        type=\"date\"\r\n                        className={classes.textField}\r\n                        value={birthday}\r\n                        onChange={event => setBirthday(event.target.value)}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(idNumber, medicalRecordId, name, sex, birthday)}\r\n            >完成\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class NewAdmission extends React.Component {\r\n    render() {\r\n        return <NewAdmissionView\r\n            onClick={(idNumber, medicalRecordId, name, sex, birthday) => {\r\n                let data = new FormData();\r\n                data.append(\"id_number\", idNumber);\r\n                data.append(\"medical_record_id\", medicalRecordId);\r\n                data.append(\"name\", name);\r\n                data.append(\"sex\", sex);\r\n                data.append(\"birthday\", birthday);\r\n                fetch(\"/admin/admission/new\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.code === 0) {\r\n                            alert(res.msg)\r\n                            window.location.reload()\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n        />\r\n    }\r\n}\r\n\r\nNewAdmission.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction DischargeView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    办理出院\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId)}>\r\n                完成\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class Discharge extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <DischargeView\r\n                onClick={(medicalRecordId) => {\r\n                    let data = new FormData();\r\n                    data.append(\"medical_record_id\", medicalRecordId);\r\n\r\n                    fetch(\"/admin/discharge\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                                if (res.code === 0) {\r\n                                    console.log(res.data);\r\n                                    if (res.data.extra_amount >= 0) {\r\n                                        alert(\"成功出院，请退回余额\" + res.data.extra_amount / 100 + \"元\")\r\n                                    } else {\r\n                                        alert(\"成功出院，另有欠款未缴，请提醒病人及时缴纳\")\r\n                                    }\r\n                                } else {\r\n                                    alert(res.msg)\r\n                                }\r\n                            }, error => {\r\n                                alert(\"请求被拦截\")\r\n                            }\r\n                        )\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDischarge.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction TransferView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [targetRoomId, setTargetRoomId] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            const response = await fetch('/info/room?department=' + department);\r\n\r\n            const rooms = await response.json();\r\n            const roomList = JSON.parse(rooms.data.room_list);\r\n\r\n            if (active) {\r\n                setOptions(Object.keys(roomList).map((key) => String(roomList[key])));\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    转移病房\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n            <Grid container>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"department\">选择科室</InputLabel>\r\n                    <Select\r\n                        id=\"department_selected\"\r\n                        value={department}\r\n                        onChange={event => {\r\n                            setTargetRoomId(null)\r\n                            setDepartment(event.target.value)\r\n                        }}\r\n                    >\r\n                        <MenuItem value={\"内科\"}>内科</MenuItem>\r\n                        <MenuItem value={\"外科\"}>外科</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Autocomplete\r\n                    className={classes.formControl}\r\n                    id=\"room\"\r\n                    style={{width: 300}}\r\n                    onChange={(event, newValue) => setTargetRoomId(newValue)}\r\n                    open={open}\r\n                    value={targetRoomId}\r\n                    onOpen={() => {\r\n                        setOpen(true);\r\n                    }}\r\n                    onClose={() => {\r\n                        setOpen(false);\r\n                    }}\r\n                    getOptionSelected={(option, value) => option.name === value.name}\r\n                    options={options}\r\n                    loading={loading}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"选择病房\"\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                endAdornment: (\r\n                                    <React.Fragment>\r\n                                        {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\r\n                                        {params.InputProps.endAdornment}\r\n                                    </React.Fragment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n            </Grid>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId, department, targetRoomId)}>\r\n                完成\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class Transfer extends React.Component {\r\n    render() {\r\n        return (\r\n            <TransferView\r\n                onClick={(medicalRecordId, department, targetRoomId) => {\r\n                    let data = new FormData();\r\n                    data.append(\"medical_record_id\", medicalRecordId);\r\n                    data.append(\"department\", department);\r\n                    data.append(\"target_room_id\", targetRoomId);\r\n                    fetch(\"/admin/transfer\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            alert(res.msg)\r\n                        }, error => {\r\n                            alert(\"请求被拦截\")\r\n                        })\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTransfer.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Cookies from 'js-cookie'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(medical_record_id, name, sex, department, room, balance) {\r\n    return {medical_record_id, name, sex, department, room, balance};\r\n}\r\n\r\nfunction PatientInfoView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const rows = props.data;\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    查询病人信息\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onClick(medicalRecordId)}>\r\n                    查询\r\n                </Button>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>病历本编号</TableCell>\r\n                            <TableCell>病人姓名</TableCell>\r\n                            <TableCell>病人性别</TableCell>\r\n                            <TableCell>所在科室</TableCell>\r\n                            <TableCell>所在病房</TableCell>\r\n                            <TableCell>余额</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.medical_record_id}>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.medical_record_id}</TableCell>\r\n                                <TableCell>{row.name}</TableCell>\r\n                                <TableCell>{row.sex}</TableCell>\r\n                                <TableCell>{row.department}</TableCell>\r\n                                <TableCell>{row.room}</TableCell>\r\n                                <TableCell>{row.balance}元</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class PatientInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/patient?department=\" + Cookies.get(\"department\"), {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.patient_info)\r\n                    let newData = [];\r\n                    for(let json of data){\r\n                        console.log(json)\r\n                        newData.push(createData(json.medical_record_id, json.name, json.sex, json.current_department, json.room_id, json.balance/100));\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <PatientInfoView\r\n            onClick={(medicalRecordId) => {\r\n                fetch(\"/info/patient_info?medical_record_id=\" + medicalRecordId, {\r\n                    method: \"GET\",\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.code === 0) {\r\n                            let data = JSON.parse(res.data.patient_info)\r\n                            let newData = [\r\n                                createData(data.medical_record_id, data.name, data.sex, data.current_department, data.room_id, data.balance / 100),\r\n                            ];\r\n                            this.setState({\r\n                                data: newData\r\n                            });\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n        />\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Finance extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction RechargeView(props) {\r\n    const classes = useStyles();\r\n    const [balance, setBalance] = React.useState(null);\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    充值余额\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n            <div>\r\n                <TextField required id=\"balance\" label=\"余额充值\" className={classes.formControl}\r\n                           InputProps={{\r\n                               endAdornment: <InputAdornment position=\"end\">元</InputAdornment>,\r\n                           }}\r\n                           value={balance}\r\n                           onChange={event => setBalance(event.target.value)}/>\r\n            </div>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId, parseInt(balance * 100))\r\n                    }>完成\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class Recharge extends React.Component {\r\n    render() {\r\n        return <RechargeView\r\n            onClick={(medicalRecordId, balance) => {\r\n                if (balance < 0 || balance >= 1000000) {\r\n                    alert(\"非法数据\")\r\n                } else {\r\n                    let data = new FormData();\r\n                    data.append(\"medical_record_id\", medicalRecordId);\r\n                    data.append(\"amount\", balance);\r\n                    fetch(\"/finance/recharge\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            alert(res.msg)\r\n                        }, error => {\r\n                            alert(\"请求被拦截\")\r\n                        })\r\n                }\r\n            }}\r\n        />\r\n    }\r\n}\r\n\r\nRecharge.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(orderId, countSum) {\r\n    return {orderId, countSum};\r\n}\r\n\r\nfunction RecoursesScheduleView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const [orderId, setOrderId] = React.useState(null);\r\n    const rows = props.data;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (orderId) => {\r\n        setOpen(true);\r\n        props.onDetail(orderId)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    订单结算\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId)}\r\n            >查询\r\n            </Button>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>订单ID</TableCell>\r\n                            <TableCell>总额</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.orderId}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.orderId}\r\n                                </TableCell>\r\n                                <TableCell>{row.countSum}元</TableCell>\r\n                                <TableCell align={\"right\"}>\r\n                                    <Button variant=\"contained\" color=\"primary\" disableElevation\r\n                                            onClick={() => handleClickOpen(row.orderId)}\r\n                                    >详情</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" style={{marginLeft: \"1em\"}}\r\n                                            disableElevation\r\n                                            onClick={() => props.onComplete(row.orderId)}>结算</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"订单详情\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.detail}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class RecoursesSchedule extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            detail: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <RecoursesScheduleView\r\n            onClick={(medicalRecordId) => {\r\n                fetch(\"/info/order?medical_record_id=\" + medicalRecordId, {\r\n                    method: \"GET\",\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.code === 0) {\r\n                            let data = JSON.parse(res.data.order_info)\r\n                            let newData = [];\r\n                            for (let json of data) {\r\n                                newData.push(createData(json.orderId, json.sum / 100))\r\n                            }\r\n                            this.setState({\r\n                                data: newData\r\n                            });\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onDetail={(orderId) => {\r\n                let data = new FormData();\r\n                data.append(\"order_id\", orderId);\r\n                fetch(\"/finance/order/detail\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        let detail = JSON.parse(res.data.data)\r\n                        let newDetail = \"\";\r\n                        for (let i = 0; i < detail.length; i++) {\r\n                            newDetail = newDetail + detail[i].resources_name + \"*\" + detail[i].resources_num + \",总价为\" + detail[i].resources_value / 100 * parseInt(detail[i].resources_num) + \",\";\r\n                        }\r\n                        if (res.code === 0) {\r\n                            this.setState({\r\n                                detail: newDetail\r\n                            })\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onComplete={(orderId) => {\r\n                let data = new FormData();\r\n                data.append(\"order_id\", orderId);\r\n                fetch(\"/finance/resources/schedule\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if(res.code === 0){\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            detail={this.state.detail}\r\n        />\r\n    }\r\n}\r\n\r\nRecoursesSchedule.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Stock extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport {render} from \"@testing-library/react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(drugId, drugCode, expirationDate, value, drugName, specification, company, form, stock) {\r\n    return {drugId, drugCode, expirationDate, value, drugName, specification, company, form, stock};\r\n}\r\n\r\nfunction DrugStockView(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [countOpen, setCountOpen] = React.useState(false);\r\n    const rows = props.data;\r\n    const [drugSelectName, setDrugSelectName] = React.useState(null);\r\n    const [drugCode, setDrugCode] = React.useState(null);\r\n    const [expirationDate, setExpirationDate] = React.useState(null);\r\n    const [value, setValue] = React.useState(null);\r\n    const [drugName, setDrugName] = React.useState(null);\r\n    const [specification, setSpecification] = React.useState(null);\r\n    const [company, setCompany] = React.useState(null);\r\n    const [form, setForm] = React.useState(null);\r\n    const [stock, setStock] = React.useState(null);\r\n    const [drugIdSet, setDrugIdSet] = React.useState(null);\r\n    const [stockSet, setStockSet] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCountOpen = (drugId) => {\r\n        setCountOpen(true);\r\n        setDrugIdSet(drugId)\r\n    };\r\n\r\n    const handleCountClose = () => {\r\n        setCountOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    药品管理\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"drug_name\" label=\"药品名称\"\r\n                                   value={drugSelectName}\r\n                                   onChange={event => setDrugSelectName(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onClickSelect(drugSelectName)}>\r\n                    查询\r\n                </Button>\r\n                <Button variant=\"contained\" style={{\r\n                    marginLeft: \"0.5em\",\r\n                    marginTop: \"0.5em\",\r\n                    broaderColor: \"green\",\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\"\r\n                }}\r\n                        onClick={handleClickOpen}\r\n                        disableElevation>\r\n                    新增\r\n                </Button>\r\n                {/*表单*/}\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">新增药品</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"drug_code\"\r\n                            value={drugCode}\r\n                            onChange={event => setDrugCode(event.target.value)}\r\n                            label=\"药品编码\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"expiration_date\"\r\n                            value={expirationDate}\r\n                            onChange={event => setExpirationDate(event.target.value)}\r\n                            label=\"过期时间\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"value\"\r\n                            value={value}\r\n                            onChange={event => setValue(event.target.value)}\r\n                            label=\"药品价格\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"drug_name\"\r\n                            value={drugName}\r\n                            onChange={event => setDrugName(event.target.value)}\r\n                            label=\"药品名称\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"specification\"\r\n                            value={specification}\r\n                            onChange={event => setSpecification(event.target.value)}\r\n                            label=\"规格\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"company\"\r\n                            value={company}\r\n                            onChange={event => setCompany(event.target.value)}\r\n                            label=\"生产公司\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"form\"\r\n                            value={form}\r\n                            onChange={event => setForm(event.target.value)}\r\n                            label=\"剂型\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"stock\"\r\n                            value={stock}\r\n                            onChange={event => setStock(event.target.value)}\r\n                            label=\"库存量\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => props.onClickAdd(drugCode, expirationDate, value*100, drugName, specification, company, form, stock)}\r\n                            color=\"primary\">\r\n                            提交\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>药品ID</TableCell>\r\n                            <TableCell>药品编码</TableCell>\r\n                            <TableCell>过期时间</TableCell>\r\n                            <TableCell>价格</TableCell>\r\n                            <TableCell>名称</TableCell>\r\n                            <TableCell>规格</TableCell>\r\n                            <TableCell>生产公司</TableCell>\r\n                            <TableCell>剂型</TableCell>\r\n                            <TableCell>库存量</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            row.drugName.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.drugId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.drugId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.drugCode}</TableCell>\r\n                                    <TableCell>{row.expirationDate}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell>{row.drugName}</TableCell>\r\n                                    <TableCell>{row.specification}</TableCell>\r\n                                    <TableCell>{row.company}</TableCell>\r\n                                    <TableCell>{row.form}</TableCell>\r\n                                    <TableCell>{row.stock}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\" color=\"primary\" disableElevation\r\n                                                onClick={() => handleCountOpen(row.drugId)}>修改</Button>\r\n                                        <Button variant=\"contained\" style={{\r\n                                            marginLeft: \"1em\",\r\n                                            backgroundColor: \"red\",\r\n                                            borderColor: \"red\",\r\n                                            color: \"white\"\r\n                                        }}\r\n                                                onClick={() => props.onClickDelete(row.drugId)}\r\n                                                disableElevation>删除</Button>\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={countOpen} onClose={handleCountClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">修改库存</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        修改该药品库存量为：\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        id=\"stock_set\"\r\n                        value={stockSet}\r\n                        onChange={event => setStockSet(event.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => props.onClickSet(drugIdSet, parseInt(stockSet))} color=\"primary\">\r\n                        确认\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class DrugStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/drug?drug_name=\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.drug_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.drug_id, json.drug_code, json.expiration_date, json.value / 100, json.drug_name, json.specification, json.company, json.form, json.stock))\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <DrugStockView\r\n            onClickSelect={(drugName) => {\r\n                this.setState({\r\n                    keyword: drugName\r\n                })\r\n            }}\r\n            onClickAdd={(drugCode, expirationDate, value, drugName, specification, company, form, stock) => {\r\n                let data = new FormData();\r\n                data.append(\"drug_code\", drugCode);\r\n                data.append(\"expiration_date\", expirationDate);\r\n                data.append(\"value\", value);\r\n                data.append(\"drug_name\", drugName);\r\n                data.append(\"specification\", specification);\r\n                data.append(\"company\", company);\r\n                data.append(\"form\", form);\r\n                data.append(\"stock\", stock);\r\n\r\n                fetch(\"/finance/drug/add\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if(res.code === 0){\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onClickSet={(drugId, stockNum) => {\r\n                let data = new FormData();\r\n                data.append(\"drug_id\", drugId);\r\n                data.append(\"stock_num\", stockNum);\r\n\r\n                fetch(\"/finance/drug/set_stock\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if (res.code === 0) {\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onClickDelete={(drugId) => {\r\n                let data = new FormData();\r\n                data.append(\"drug_id\", drugId);\r\n\r\n                fetch(\"/finance/drug/remove\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        window.location.reload()\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n}\r\n\r\nDrugStock.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport DrugStock from \"./DrugStock\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(equipmentId, name, location, value) {\r\n    return {equipmentId, name, location, value};\r\n}\r\n\r\nfunction EquipmentStockView(props) {\r\n    const classes = useStyles();\r\n    const [equipmentName, setEquipmentName] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [equipmentLocation, setEquipmentLocation] = React.useState(null);\r\n    const [equipmentValue, setEquipmentValue] = React.useState(null);\r\n    const [equipmentNameSelect, setEquipmentNameSelect] = React.useState(null);\r\n    const rows = props.data;\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    设备管理\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"equipment_name\" label=\"设备名称\"\r\n                                   value={equipmentNameSelect}\r\n                                   onChange={event => setEquipmentNameSelect(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onSelect(equipmentNameSelect)}>\r\n                    查询\r\n                </Button>\r\n                <Button variant=\"contained\" style={{\r\n                    marginLeft: \"0.5em\",\r\n                    marginTop: \"0.5em\",\r\n                    broaderColor: \"green\",\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\"\r\n                }} disableElevation\r\n                        onClick={handleClickOpen}>\r\n                    新增\r\n                </Button>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">新增设备</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"equipment_name\"\r\n                            value={equipmentName}\r\n                            onChange={event => setEquipmentName(event.target.value)}\r\n                            label=\"设备名称\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"equipment_location\"\r\n                            value={equipmentLocation}\r\n                            onChange={event => setEquipmentLocation(event.target.value)}\r\n                            label=\"位置\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"equipment_value\"\r\n                            value={equipmentValue}\r\n                            onChange={event => setEquipmentValue(event.target.value)}\r\n                            label=\"价格\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => props.onAdd(equipmentName, equipmentLocation, parseInt(equipmentValue * 100))}\r\n                            color=\"primary\">\r\n                            提交\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>设备ID</TableCell>\r\n                            <TableCell>设备名称</TableCell>\r\n                            <TableCell>设备位置</TableCell>\r\n                            <TableCell>价格</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            row.name.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.equipmentId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.equipmentId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.name}</TableCell>\r\n                                    <TableCell>{row.location}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\" style={{\r\n                                            marginLeft: \"1em\",\r\n                                            backgroundColor: \"red\",\r\n                                            borderColor: \"red\",\r\n                                            color: \"white\"\r\n                                        }} disableElevation\r\n                                                onClick={() => props.onDelete(row.equipmentId)}>删除</Button>\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class EquipmentStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/equipment?equipment_name=\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.equipment_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.equipment_id, json.equipment_name, json.equipment_location, json.value / 100))\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <EquipmentStockView\r\n            onSelect={(equipmentName) => {\r\n                this.setState({\r\n                    keyword: equipmentName\r\n                })\r\n            }}\r\n            onAdd={(equipmentName, equipmentLocation, equipmentValue) => {\r\n                let data = new FormData();\r\n                data.append(\"equipment_name\", equipmentName);\r\n                data.append(\"equipment_location\", equipmentLocation);\r\n                data.append(\"value\", equipmentValue);\r\n                fetch(\"/finance/equipment/add\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if (res.code === 0) {\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onDelete={(equipmentId) => {\r\n                let data = new FormData();\r\n                data.append(\"equipment_id\", equipmentId);\r\n                fetch(\"/finance/equipment/remove\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if (res.code === 0) {\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n}\r\n\r\nEquipmentStock.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}","import React from \"react\";\r\n\r\nexport default class Order extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(drugId, drugCode, expirationDate, value, drugName, specification, company, form, stock) {\r\n    return {drugId, drugCode, expirationDate, value, drugName, specification, company, form, stock};\r\n}\r\n\r\nfunction addToCurrentList(drugId, drugCode, expirationDate, value, drugName, drugNum) {\r\n    return {drugId, drugCode, expirationDate, value, drugName, drugNum}\r\n}\r\n\r\nfunction DrugOrderView(props) {\r\n    const classes = useStyles();\r\n    const [drugName, setDrugName] = React.useState(null);\r\n    const [drugId, setDrugId] = React.useState(null);\r\n    const [drugNum, setDrugNum] = React.useState(null);\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const currentRows = props.currentData;\r\n    const listRows = props.data;\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = (drugId) => {\r\n        setOpen(true);\r\n        setDrugId(drugId);\r\n    };\r\n    const handlePositiveClose = () => {\r\n        setOpen(false);\r\n        //发送请求\r\n        props.onAdd(drugId, parseInt(drugNum));\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    药品订单\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onComplete(medicalRecordId)}>\r\n                    完成\r\n                </Button>\r\n                <Divider style={{marginTop: \"1em\"}}/>\r\n                {/*表格部分*/}\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>药品ID</TableCell>\r\n                                <TableCell>药品编码</TableCell>\r\n                                <TableCell>过期时间</TableCell>\r\n                                <TableCell>价格</TableCell>\r\n                                <TableCell>名称</TableCell>\r\n                                <TableCell>数量</TableCell>\r\n                                <TableCell/>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {currentRows.map((row) => (\r\n                                <TableRow key={row.drugId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.drugId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.drugCode}</TableCell>\r\n                                    <TableCell>{row.expirationDate}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell>{row.drugName}</TableCell>\r\n                                    <TableCell>{row.drugNum}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\"\r\n                                                style={{backgroundColor: \"red\", borderColor: \"red\", color: \"white\"}}\r\n                                                disableElevation\r\n                                                onClick={() => props.onDelete(row.drugId)}\r\n                                        >删除</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Divider style={{marginTop: \"1em\"}}/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"drug_name\" label=\"药品名称\"\r\n                                   value={drugName}\r\n                                   onChange={event => setDrugName(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onClick(drugName)}>\r\n                    查询\r\n                </Button>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>药品ID</TableCell>\r\n                            <TableCell>药品编码</TableCell>\r\n                            <TableCell>过期时间</TableCell>\r\n                            <TableCell>价格</TableCell>\r\n                            <TableCell>名称</TableCell>\r\n                            <TableCell>规格</TableCell>\r\n                            <TableCell>生产公司</TableCell>\r\n                            <TableCell>剂型</TableCell>\r\n                            <TableCell>库存量</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listRows.map((row) => (\r\n                            row.drugName.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.drugId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.drugId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.drugCode}</TableCell>\r\n                                    <TableCell>{row.expirationDate}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell>{row.drugName}</TableCell>\r\n                                    <TableCell>{row.specification}</TableCell>\r\n                                    <TableCell>{row.company}</TableCell>\r\n                                    <TableCell>{row.form}</TableCell>\r\n                                    <TableCell>{row.stock}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\"\r\n                                                style={{backgroundColor: \"green\", borderColor: \"green\", color: \"white\"}}\r\n                                                disableElevation\r\n                                                onClick={() => handleClickOpen(row.drugId)}\r\n                                        >添加</Button>\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">确认数量</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        请输入您要添加到该处方中的该药品数量:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        id=\"drugNum\"\r\n                        value={drugNum}\r\n                        onChange={event => setDrugNum(event.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handlePositiveClose} color=\"primary\">\r\n                        确认\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class DrugOrder extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            currentData: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/drug?drug_name=\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.drug_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.drug_id, json.drug_code, json.expiration_date, json.value / 100, json.drug_name, json.specification, json.company, json.form, json.stock))\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <DrugOrderView\r\n            onClick={(drugName) => {\r\n                this.setState({\r\n                    keyword: drugName\r\n                })\r\n            }}\r\n            onAdd={(drugId, drugNum) => {\r\n                if (drugNum < 0) {\r\n                    alert(\"非法数据\")\r\n                } else {\r\n                    let newCurrentData = this.state.currentData;\r\n                    let data = this.state.data;\r\n                    let flag = false;\r\n                    let existFlag = false;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        let dataRow = data[i];\r\n                        if (drugId === dataRow.drugId && drugNum <= dataRow.stock) {\r\n                            data[i].stock -= drugNum;\r\n                            for (let m = 0; m < newCurrentData.length; m++) {\r\n                                if (drugId === newCurrentData[m].drugId) {\r\n                                    newCurrentData[m].drugNum += drugNum;\r\n                                    existFlag = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!existFlag) {\r\n                                newCurrentData.push(addToCurrentList(dataRow.drugId, dataRow.drugCode, dataRow.expirationDate, dataRow.value, dataRow.drugName, drugNum));\r\n                            }\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                    if (!flag) {\r\n                        alert(\"非法数据\");\r\n                    }\r\n                    this.setState({\r\n                        data: data,\r\n                        currentData: newCurrentData\r\n                    })\r\n                }\r\n            }}\r\n            onDelete={(drugId) => {\r\n                let newCurrentData = this.state.currentData;\r\n                let newData = this.state.data;\r\n                for (let i = 0; i < newCurrentData.length; i++) {\r\n                    if (newCurrentData[i].drugId === drugId) {\r\n                        for (let m = 0; m < newData.length; m++) {\r\n                            if (newData[m].drugId === drugId) {\r\n                                newData[m].stock += parseInt(newCurrentData[i].drugNum)\r\n                            }\r\n                        }\r\n                        newCurrentData.splice(i, 1);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    currentData: newCurrentData,\r\n                    data: newData\r\n                })\r\n            }}\r\n            onComplete={(medicalRecordId) => {\r\n                let drugList = [];\r\n                for (let i = 0; i < this.state.currentData.length; i++) {\r\n                    let drugOne = {\r\n                        drug_id: this.state.currentData[i].drugId,\r\n                        drug_count: this.state.currentData[i].drugNum\r\n                    }\r\n                    drugList.push(drugOne)\r\n                }\r\n                let data = new FormData();\r\n                data.append(\"medical_record_id\", medicalRecordId);\r\n                data.append(\"drug_list\", JSON.stringify(drugList));\r\n                fetch(\"/order/drug_order\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.code === 0) {\r\n                            alert(res.msg)\r\n                            window.location.reload()\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            currentData={this.state.currentData}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(equipmentId, name, location, value) {\r\n    return {equipmentId, name, location, value};\r\n}\r\n\r\nfunction addToCurrentList(equipmentId, name, location, value, equipmentNum) {\r\n    return {equipmentId, name, location, value, equipmentNum};\r\n}\r\n\r\nfunction EquipmentOrderView(props) {\r\n    const classes = useStyles();\r\n    const [equipmentName, setEquipmentName] = React.useState(null);\r\n    const [equipmentId, setEquipmentId] = React.useState(null);\r\n    const [equipmentNum, setEquipmentNum] = React.useState(null);\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const currentRows = props.currentData;\r\n    const listRows = props.data;\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = (equipmentId) => {\r\n        setOpen(true);\r\n        setEquipmentId(equipmentId)\r\n    };\r\n    const handlePositiveClose = () => {\r\n        setOpen(false);\r\n        props.onAdd(equipmentId, parseInt(equipmentNum))\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    检查项目订单\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onComplete(medicalRecordId)}>\r\n                    完成\r\n                </Button>\r\n                <Divider style={{marginTop: \"1em\"}}/>\r\n                {/*表格部分*/}\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>设备ID</TableCell>\r\n                                <TableCell>设备名称</TableCell>\r\n                                <TableCell>设备位置</TableCell>\r\n                                <TableCell>价格</TableCell>\r\n                                <TableCell>次数</TableCell>\r\n                                <TableCell/>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {currentRows.map((row) => (\r\n                                <TableRow key={row.equipmentId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.equipmentId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.name}</TableCell>\r\n                                    <TableCell>{row.location}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell>{row.equipmentNum}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\"\r\n                                                style={{backgroundColor: \"red\", borderColor: \"red\", color: \"white\"}}\r\n                                                disableElevation\r\n                                                onClick={() => props.onDelete(row.equipmentId)}\r\n                                        >删除</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Divider style={{marginTop: \"1em\"}}/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"equipment_name\" label=\"设备名称\"\r\n                                   value={equipmentName}\r\n                                   onChange={event => setEquipmentName(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onClick(equipmentName)}>\r\n                    查询\r\n                </Button>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>设备ID</TableCell>\r\n                            <TableCell>设备名称</TableCell>\r\n                            <TableCell>设备位置</TableCell>\r\n                            <TableCell>价格</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listRows.map((row) => (\r\n                            row.name.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.equipmentId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.equipmentId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.name}</TableCell>\r\n                                    <TableCell>{row.location}</TableCell>\r\n                                    <TableCell>{row.value}元</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\"\r\n                                                style={{backgroundColor: \"green\", borderColor: \"green\", color: \"white\"}}\r\n                                                disableElevation\r\n                                                onClick={() => handleClickOpen(row.equipmentId)}\r\n                                        >选择</Button>\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">确认数量</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        请输入您要添加到该订单中的该检查项目次数:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        id=\"equipmentNum\"\r\n                        value={equipmentNum}\r\n                        onChange={event => setEquipmentNum(event.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handlePositiveClose} color=\"primary\">\r\n                        确认\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class EquipmentOrder extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            currentData: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/equipment?equipment_name=\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.equipment_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.equipment_id, json.equipment_name, json.equipment_location, json.value / 100))\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <EquipmentOrderView\r\n            onClick={(equipmentName) => {\r\n                this.setState({\r\n                    keyword: equipmentName\r\n                })\r\n            }}\r\n            onAdd={(equipmentId, equipmentNum) => {\r\n                if (equipmentNum < 0) {\r\n                    alert(\"非法数据\")\r\n                } else {\r\n                    let newCurrentData = this.state.currentData;\r\n                    let data = this.state.data;\r\n                    if (newCurrentData.length > 0) {\r\n                        alert(\"每次仅可以添加一种检查项目到订单中\")\r\n                    } else {\r\n                        let flag = false;\r\n                        for (let i = 0; i < data.length; i++) {\r\n                            let dataRow = data[i]\r\n                            if (equipmentId === dataRow.equipmentId) {\r\n                                console.log(addToCurrentList(dataRow.equipmentId, dataRow.name, dataRow.location, dataRow.value, equipmentNum));\r\n                                newCurrentData.push(addToCurrentList(dataRow.equipmentId, dataRow.name, dataRow.location, dataRow.value, equipmentNum));\r\n                                console.log(newCurrentData)\r\n                                flag = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!flag) {\r\n                            alert(\"非法数据\");\r\n                        }\r\n                        this.setState({\r\n                            data: data,\r\n                            currentData: newCurrentData\r\n                        })\r\n                    }\r\n                }\r\n            }}\r\n            onDelete={(equipmentId) => {\r\n                let newCurrentData = this.state.currentData;\r\n                let newData = this.state.data;\r\n                for (let i = 0; i < newCurrentData.length; i++) {\r\n                    if (newCurrentData[i].equipmentId === equipmentId) {\r\n                        newCurrentData.splice(i, 1);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    currentData: newCurrentData,\r\n                    data: newData\r\n                })\r\n            }}\r\n            onComplete={(medicalRecordId) => {\r\n                let data = new FormData();\r\n                data.append(\"medical_record_id\", medicalRecordId);\r\n                data.append(\"equipment_id\", this.state.currentData[0].equipmentId);\r\n                data.append(\"equipment_num\", this.state.currentData[0].equipmentNum);\r\n                fetch(\"/order/equipment_order\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if (res.code === 0) {\r\n                            alert(res.msg)\r\n                            window.location.reload()\r\n                        } else {\r\n                            alert(res.msg)\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            currentData={this.state.currentData}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider} from \"@material-ui/core\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport Login from \"./Login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction DrugReturnView(props) {\r\n    const classes = useStyles();\r\n    const [medicalRecordId, setMedicalRecordId] = React.useState(null);\r\n    const [drugId, setDrugId] = React.useState(null);\r\n    const [drugNum, setDrugNum] = React.useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    药品回收\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"medical_record_id\" label=\"病历本编号\"\r\n                                   value={medicalRecordId}\r\n                                   onChange={event => setMedicalRecordId(event.target.value)}/>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"drugId\" label=\"药品ID\"\r\n                                   value={drugId}\r\n                                   onChange={event => setDrugId(event.target.value)}/>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} className={classes.formControl}>\r\n                        <TextField required id=\"drugNum\" label=\"回收数量\"\r\n                                   value={drugNum}\r\n                                   onChange={event => setDrugNum(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"0.5em\"}}/>\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"1em\"}} disableElevation\r\n                    onClick={() => props.onClick(medicalRecordId, drugId, drugNum)}>\r\n                完成\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class DrugReturn extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <DrugReturnView\r\n                onClick={(medicalRecordId, drugId, drugNum) => {\r\n                    let data = new FormData();\r\n                    data.append(\"medical_record_id\", medicalRecordId);\r\n                    data.append(\"drug_id\", drugId);\r\n                    data.append(\"drug_num\", drugNum)\r\n\r\n                    fetch(\"/finance/drug/return\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                                alert(res.msg)\r\n                            }, error => {\r\n                                alert(\"请求被拦截\")\r\n                            }\r\n                        )\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDrugReturn.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {PropTypes} from \"prop-types\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(bedId, roomId, bedDepartment, bedPrice, bedStatus) {\r\n    return {bedId, roomId, bedDepartment, bedPrice, bedStatus};\r\n}\r\n\r\nfunction DrugStockView(props) {\r\n    const classes = useStyles();\r\n    const rows = props.data;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [roomId, setRoomId] = React.useState(null);\r\n    const [bedDepartment, setBedDepartment] = React.useState(null);\r\n    const [bedPrice, setBedPrice] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    病床管理\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"department\" label=\"所属科室\"\r\n                                   value={department}\r\n                                   onChange={event => setDepartment(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onClickSelect(department)}>\r\n                    查询\r\n                </Button>\r\n                <Button variant=\"contained\" style={{\r\n                    marginLeft: \"0.5em\",\r\n                    marginTop: \"0.5em\",\r\n                    broaderColor: \"green\",\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\"\r\n                }}\r\n                        onClick={handleClickOpen}\r\n                        disableElevation>\r\n                    新增\r\n                </Button>\r\n\r\n                {/*表单*/}\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">新增病床</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"roomId\"\r\n                            value={roomId}\r\n                            onChange={event => setRoomId(event.target.value)}\r\n                            label=\"病房ID\"\r\n                            fullWidth\r\n                        />\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"bed_department\">选择科室</InputLabel>\r\n                            <Select\r\n                                id=\"bed_department\"\r\n                                value={bedDepartment}\r\n                                onChange={event => setBedDepartment(event.target.value)}\r\n                            >\r\n                                <MenuItem value={\"内科\"}>内科</MenuItem>\r\n                                <MenuItem value={\"外科\"}>外科</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"price\"\r\n                            value={bedPrice}\r\n                            onChange={event => setBedPrice(event.target.value)}\r\n                            label=\"病床价格\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                        <Button onClick={() => props.onClickAdd(roomId, bedDepartment, parseInt(bedPrice * 100))}\r\n                                color=\"primary\">\r\n                            提交\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>病床ID</TableCell>\r\n                            <TableCell>病房ID</TableCell>\r\n                            <TableCell>所属科室</TableCell>\r\n                            <TableCell>价格</TableCell>\r\n                            <TableCell>状态</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            row.bedDepartment.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.bedId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.bedId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.roomId}</TableCell>\r\n                                    <TableCell>{row.bedDepartment}</TableCell>\r\n                                    <TableCell>{row.bedPrice}元</TableCell>\r\n                                    <TableCell>{row.bedStatus ? \"使用中\" : \"可使用\"}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {<Button variant=\"contained\" style={row.bedStatus ? {\r\n                                            marginLeft: \"1em\",\r\n                                            backgroundColor: \"red\",\r\n                                            borderColor: \"red\",\r\n                                            color: \"white\",\r\n                                            visibility: \"hidden\"\r\n                                        } : {\r\n                                            marginLeft: \"1em\",\r\n                                            backgroundColor: \"red\",\r\n                                            borderColor: \"red\",\r\n                                            color: \"white\"\r\n                                        }}\r\n                                                 onClick={() => props.onClickDelete(row.bedId)}\r\n                                                 disableElevation>删除</Button>}\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class SickbedStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/sickbed?department=\" + \"内科\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.sickbed_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.bed_id, json.room_id, json.bed_department, json.bed_price / 100, json.bed_status));\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <DrugStockView\r\n            onClickSelect={(department) => {\r\n                this.setState({\r\n                    keyword: department\r\n                })\r\n            }}\r\n            onClickAdd={(roomId, bedDepartment, bedPrice) => {\r\n                let data = new FormData();\r\n                data.append(\"room_id\", roomId);\r\n                data.append(\"bed_department\", bedDepartment);\r\n                data.append(\"bed_price\", bedPrice);\r\n\r\n                fetch(\"/finance/sickbed/add\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if(res.code === 0){\r\n                            window.location.reload();\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onClickDelete={(bedId) => {\r\n                let data = new FormData();\r\n                data.append(\"bed_id\", bedId);\r\n\r\n                fetch(\"/finance/sickbed/remove\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if(res.code === 0){\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            data={this.state.data}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n}\r\n\r\nSickbedStock.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Divider, Paper} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport Cookies from 'js-cookie'\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(staffId, staffAuth, staffName, staffSex, staffDepartment) {\r\n    if (staffAuth === 1) {\r\n        staffAuth = \"管理员\"\r\n    } else if (staffAuth === 0) {\r\n        staffAuth = \"医生\"\r\n    } else if (staffAuth === 2) {\r\n        staffAuth = \"护士\"\r\n    }\r\n    return {staffId, staffAuth, staffName, staffSex, staffDepartment};\r\n}\r\n\r\nfunction StaffStockView(props) {\r\n    const classes = useStyles();\r\n    const [staffNameSelect, setStaffNameSelect] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [staffId, setStaffId] = React.useState(null);\r\n    const [staffAuth, setStaffAuth] = React.useState(null);\r\n    const [staffName, setStaffName] = React.useState(null);\r\n    const [staffSex, setStaffSex] = React.useState(null);\r\n    const [staffDepartment, setStaffDepartment] = React.useState(null);\r\n    const [password, setPassword] = React.useState(null);\r\n    const rows = props.data;\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    职员管理\r\n                </Typography>\r\n                <Divider/>\r\n                <Grid container className={classes.div_inline}>\r\n                    <Grid className={classes.formControl}>\r\n                        <TextField required id=\"staff_name_select\" label=\"职员姓名\"\r\n                                   value={staffNameSelect}\r\n                                   onChange={event => setStaffNameSelect(event.target.value)}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop: \"0.5em\"}} disableElevation\r\n                        onClick={() => props.onSelect(staffNameSelect)}>\r\n                    查询\r\n                </Button>\r\n                <Button variant=\"contained\" style={{\r\n                    marginLeft: \"0.5em\",\r\n                    marginTop: \"0.5em\",\r\n                    broaderColor: \"green\",\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\"\r\n                }} disableElevation\r\n                        onClick={handleClickOpen}>\r\n                    新增\r\n                </Button>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">新增职员</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"staff_name\"\r\n                            value={staffName}\r\n                            onChange={event => setStaffName(event.target.value)}\r\n                            label=\"职员名称\"\r\n                            fullWidth\r\n                        />\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"staff_sex\">性别</InputLabel>\r\n                            <Select\r\n                                id=\"staff_sex\"\r\n                                value={staffSex}\r\n                                onChange={event => setStaffSex(event.target.value)}\r\n                            >\r\n                                <MenuItem value={\"男\"}>男</MenuItem>\r\n                                <MenuItem value={\"女\"}>女</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"staff_auth\">职员类型</InputLabel>\r\n                            <Select\r\n                                id=\"staff_auth\"\r\n                                value={staffAuth}\r\n                                onChange={event => setStaffAuth(event.target.value)}\r\n                            >\r\n                                <MenuItem value={1}>管理员</MenuItem>\r\n                                <MenuItem value={0}>医生</MenuItem>\r\n                                <MenuItem value={2}>护士</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"staff_department\">选择科室</InputLabel>\r\n                            <Select\r\n                                id=\"staff_department\"\r\n                                value={staffDepartment}\r\n                                onChange={event => setStaffDepartment(event.target.value)}\r\n                            >\r\n                                <MenuItem value={\"内科\"}>内科</MenuItem>\r\n                                <MenuItem value={\"外科\"}>外科</MenuItem>\r\n                                <MenuItem value={\"管理\"}>管理</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={event => setPassword(event.target.value)}\r\n                            label=\"登录密码\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => props.onAdd(staffName, staffSex, staffAuth, staffDepartment, password)}\r\n                            color=\"primary\">\r\n                            提交\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n            <Divider style={{marginTop: \"1em\"}}/>\r\n            {/*表格部分*/}\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>职员ID</TableCell>\r\n                            <TableCell>姓名</TableCell>\r\n                            <TableCell>性别</TableCell>\r\n                            <TableCell>类型</TableCell>\r\n                            <TableCell>所属部门</TableCell>\r\n                            <TableCell/>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            row.staffName.indexOf(props.keyword) !== -1 ?\r\n                                <TableRow key={row.staffId}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.staffId}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.staffName}</TableCell>\r\n                                    <TableCell>{row.staffSex}</TableCell>\r\n                                    <TableCell>{row.staffAuth}</TableCell>\r\n                                    <TableCell>{row.staffDepartment}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Button variant=\"contained\" style={{\r\n                                            marginLeft: \"1em\",\r\n                                            backgroundColor: \"red\",\r\n                                            borderColor: \"red\",\r\n                                            color: \"white\"\r\n                                        }} disableElevation\r\n                                                onClick={() => props.onDelete(row.staffId)}>删除</Button>\r\n                                    </TableCell>\r\n                                </TableRow> : null\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class StaffStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keyword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"/info/staff?staff_name=\", {\r\n            method: \"GET\",\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.code === 0) {\r\n                    let data = JSON.parse(res.data.staff_info)\r\n                    let newData = [];\r\n                    for (let json of data) {\r\n                        newData.push(createData(json.staff_id, json.staff_auth, json.staff_name, json.staff_sex, json.staff_department))\r\n                    }\r\n                    this.setState({\r\n                        data: newData\r\n                    });\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }, error => {\r\n                alert(\"请求被拦截\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <StaffStockView\r\n            onSelect={(staffName) => {\r\n                this.setState({\r\n                    keyword: staffName\r\n                })\r\n            }}\r\n            onAdd={(staffName, staffSex, staffAuth, staffDepartment, password) => {\r\n                let data = new FormData();\r\n                data.append(\"staff_name\", staffName);\r\n                data.append(\"staff_sex\", staffSex);\r\n                data.append(\"staff_auth\", staffAuth);\r\n                data.append(\"staff_department\", staffDepartment);\r\n                data.append(\"password\", password);\r\n                fetch(\"/finance/staff/add\", {\r\n                    method: \"POST\",\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        alert(res.msg)\r\n                        if (res.code === 0) {\r\n                            window.location.reload()\r\n                        }\r\n                    }, error => {\r\n                        alert(\"请求被拦截\")\r\n                    })\r\n            }}\r\n            onDelete={(staffId) => {\r\n                if (parseInt(Cookies.get(\"staff_id\")) === parseInt(staffId)) {\r\n                    alert(\"禁止删除该职员\")\r\n                } else {\r\n                    let data = new FormData();\r\n                    data.append(\"staff_id\", staffId);\r\n                    fetch(\"/finance/staff/remove\", {\r\n                        method: \"POST\",\r\n                        body: data\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            alert(res.msg)\r\n                            if (res.code === 0) {\r\n                                window.location.reload()\r\n                            }\r\n                        }, error => {\r\n                            alert(\"请求被拦截\")\r\n                        })\r\n                }\r\n            }}\r\n            data={this.state.data}\r\n            keyword={this.state.keyword}\r\n        />\r\n    }\r\n}\r\n\r\nStaffStock.contextType = {\r\n    router: PropTypes.object.isRequired\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Admin from './pages/Admin'\nimport Admission from './pages/Admission'\nimport NewAdmission from \"./pages/NewAdmission\";\nimport Discharge from \"./pages/Discharge\";\nimport Transfer from \"./pages/Transfer\";\nimport PatientInfo from \"./pages/PatientInfo\";\nimport Finance from \"./pages/Finance\";\nimport Recharge from \"./pages/Recharge\";\nimport RecoursesSchedule from \"./pages/RecoursesSchedule\";\nimport Stock from \"./pages/Stock\"\nimport DrugStock from \"./pages/DrugStock\";\nimport EquipmentStock from \"./pages/EquipmentStock\";\nimport Order from \"./pages/Order\"\n\nimport {Route, Router, hashHistory, Redirect} from 'react-router'\nimport DrugOrder from \"./pages/DrugOrder\";\nimport EquipmentOrder from \"./pages/EquipmentOrder\";\nimport DrugReturn from \"./pages/DrugReturn\";\nimport SickbedStock from \"./pages/SickbedStock\";\nimport StaffStock from \"./pages/StaffStock\";\n\nReactDOM.render((\n    <Router history={hashHistory}>\n        <Route path=\"/\" component={Login} exact/>\n        <Route path=\"/main\" component={Main}>\n            <Route path=\"admin\" component={Admin}>\n                <Route path=\"new_admission\" component={NewAdmission}/>\n                <Route path=\"admission\" component={Admission}/>\n                <Route path=\"discharge\" component={Discharge}/>\n                <Route path=\"transfer\" component={Transfer}/>\n                <Route path=\"patient_info\" component={PatientInfo}/>\n            </Route>\n            <Route path=\"finance\" component={Finance}>\n                <Route path=\"recharge\" component={Recharge}/>\n                <Route path=\"recourses_schedule\" component={RecoursesSchedule}/>\n                <Route path=\"drug_return\" component={DrugReturn}/>\n            </Route>\n            <Route path=\"stock\" component={Stock}>\n                <Route path=\"drug\" component={DrugStock}/>\n                <Route path=\"equipment\" component={EquipmentStock}/>\n                <Route path=\"sickbed\" component={SickbedStock}/>\n                <Route path=\"staff\" component={StaffStock}/>\n            </Route>\n            <Route path=\"order\" component={Order}>\n                <Route path=\"drug\" component={DrugOrder}/>\n                <Route path=\"equipment\" component={EquipmentOrder}/>\n            </Route>\n        </Route>\n        <Redirect from=\"/*\" to=\"/main\"/>\n    </Router>\n), document.getElementById('root'));"],"sourceRoot":""}